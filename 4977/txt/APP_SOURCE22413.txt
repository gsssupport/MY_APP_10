[{
  "key": "14~WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5\", \"14\"] }",
  "qry_type": "D"
},{
  "key": "14~WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5~E_1530508105412~DT_FOLDER~DTT_RIL_FOLDER~DS_1530508576070~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5$DQ$,$DQ$DS_1530508576070$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT DENSE_RANK() OVER (ORDER BY TAA_ID) RANK, TAA_ID, TA_ID, ACTION_CODE, ACTION_DESCRIPTION FROM TRANSACTION_ALLOCATION_ACTIONS $WHERE$DQ$,$DQ$14$DQ$,$DQ$1$DQ$,$DQ$E_1530508105412$DQ$,$DQ$DT_FOLDER$DQ$,$DQ$DTT_RIL_FOLDER$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$] }",
  "qry_type": "I"
},{
  "key": "14~WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5~E_5_BIND_RECORD_FROM_QUERY~DT_FOLDER~DTT_RIL_FOLDER~DS_1468904568274~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5$DQ$,$DQ$DS_1468904568274$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$WITH recursive recur_select (ts_id,parent_ts_id,trn_id,dt_code,dtt_code,trna_id,status) AS  (                  SELECT DISTINCT ts_id,                                  parent_ts_id,                                  trn_id,                                  dt_code,                                  dtt_code ,                                  trna_id,                                  status,                                  process_status,                                  is_current,                                  original_file_name                  FROM            (                                                  SELECT DISTINCT ts.ts_id,                                                                  ts.parent_ts_id,                                                                  trna.trn_id,                                                                  trna.dt_code,                                                                  trna.dtt_code ,                                                                  trna.trna_id,                                                                  ts1.status,                                                                  ts1.process_status,                                                                  is_current,                                                                  original_file_name,trna.system_id                                                  FROM            trn_attachments trna                                                  INNER JOIN      transaction_set ts                                                  ON              ts.trn_id=trna.trn_id                                                  AND             ts.dt_code=trna.dt_code                                                  AND             ts.dtt_code=trna.dtt_code                                                  INNER JOIN      transaction_set ts1                                                  ON              ts1.trn_id=trna.atmt_trn_id                                                  AND             ts1.dtt_code=trna.atmt_dtt_code                                                  LEFT JOIN                                                                  (                                                                             SELECT     trnala.taa_id,                                                                                       item_id                                                                             FROM       transaction_allocation_actions trnala                                                                            INNER JOIN transaction_allocations trnal                                                                            ON         trnala.ta_id = trnal.ta_id                                                                            WHERE      item_type=$SQ$ATMT$SQ$                                                                            AND        COALESCE(taa_id,0 )<> 0 )vw                                                  ON              vw.item_id=trna.trna_id                                                  LEFT JOIN       vw_allocation_chk_list vw1                                                  ON              vw1.item_id=trna.trna_id )t1                  WHERE           is_current=$SQ$Y$SQ$  AND (  (STATUS = $SQ$DOC-APPROVED$SQ$  AND  PROCESS_STATUS = $SQ$ACTIVE$SQ$) OR (STATUS = $SQ$DOC-BLOCKED$SQ$  AND  PROCESS_STATUS = $SQ$ACTIVE$SQ$))$AND                             UNION ALL                  SELECT ts1.ts_id,                         ts1.parent_ts_id,                         ts1.trn_id,                         ts1.dt_code,                         ts1.dtt_code ,                         rs.trna_id,                         rs.status,                         ts1.process_status,                         is_current,                         original_file_name                  FROM   recur_select rs,                         transaction_set ts1                  WHERE  ts1.ts_id=rs.parent_ts_id )  SELECT   *  FROM     (                      SELECT     vw.child_id,                                 vw.parent_id,                                 CASE                                            WHEN COALESCE(vw.total_pages,0)=0 THEN vw.seq_name                                                                  ||$SQ$ ($SQ$                                                                  ||rs.status                                                                  ||$SQ$) $SQ$                                            ELSE vw.seq_name                                                                  ||$SQ$ ($SQ$                                                                  ||rs.status                                                                  ||$SQ$) $SQ$                                                                  ||$SQ$ - ($SQ$                                                                  ||vw.total_pages                                                                  ||$SQ$)$SQ$                                 END node_text,                                 CASE                                            WHEN rs.status=$SQ$DOC-APPROVED$SQ$ THEN $SQ$Y$SQ$                                            WHEN rs.status=$SQ$DOC-ADDED$SQ$ THEN $SQ$N$SQ$                                            WHEN rs.status=$SQ$DOC-BLOCKED$SQ$ THEN $SQ$N$SQ$                                            ELSE $SQ$$SQ$                                 END flag1,                                 CASE                                            WHEN rs.status=$SQ$DOC-APPROVED$SQ$ THEN $SQ$N$SQ$                                            WHEN rs.status=$SQ$DOC-ADDED$SQ$ THEN $SQ$N$SQ$                                            WHEN rs.status=$SQ$DOC-BLOCKED$SQ$ THEN $SQ$Y$SQ$                                            ELSE $SQ$$SQ$                                 END flag2,                                 vw.trna_id,                                 vw.trn_id,                                 vw.dt_code,                                 vw.dtt_code,                                 vw.node_type,                                 vw.node_category,                                 vw.atmt_dtt_code,                                 vw.atmt_trn_id,                                 vw.atmt_ts_id,                                 vw.icon_name,                                 vw.ts_id,                                 vw.trnf_id,                                 vw.at_code,                                 vw.seq_no,                                 vw.trna_id fx_item_id                      FROM       recur_select rs                      INNER JOIN vw_ril_tran_reader_listing vw                      ON         vw.trna_id=rs.trna_id                      AND        vw.dtt_code=rs.dtt_code                      AND        vw.node_type=$SQ$ATMT$SQ$                      UNION                      SELECT     vw.child_id,                                 vw.parent_id,                                 CASE                                            WHEN COALESCE(vw1.no_of_docs,0)=0 THEN vw.seq_name                                            ELSE vw.seq_name                                                                  ||$SQ$ - ($SQ$                                                                  ||vw1.no_of_docs                                                                  ||$SQ$)$SQ$                                 END node_text,                                 $SQ$Y$SQ$ flag1,                                 $SQ$Y$SQ$ flag2,                                 vw.trna_id,                                 vw.trn_id,                                 vw.dt_code,                                 vw.dtt_code,                                 vw.node_type,                                 vw.node_category,                                 vw.atmt_dtt_code,                                 vw.atmt_trn_id,                                 vw.atmt_ts_id,                                 vw.icon_name,                                 vw.ts_id,                                 vw.trnf_id,                                 vw.at_code,                                 vw.seq_no,                                 vw.trn_id fx_item_id                      FROM       recur_select rs                      INNER JOIN vw_ril_tran_reader_listing vw                      ON         vw.trn_id=rs.trn_id                      AND        vw.dtt_code=rs.dtt_code                      AND        vw.node_type=$SQ$TRAN$SQ$                      INNER JOIN                                 (                                          SELECT   count(rs.trna_id)no_of_docs,                                                   rs.trn_id                                          FROM     recur_select rs                                          WHERE    rs.dt_code=$SQ$DT_FOLDER$SQ$                                          AND      rs.dtt_code=$SQ$DTT_RIL_FOLDER$SQ$                                          GROUP BY rs.trn_id )vw1                      ON         vw1.trn_id=rs.trn_id )vw2  ORDER BY seq_no$DQ$,$DQ$14$DQ$,$DQ$1$DQ$,$DQ$E_5_BIND_RECORD_FROM_QUERY$DQ$,$DQ$DT_FOLDER$DQ$,$DQ$DTT_RIL_FOLDER$DQ$,$DQ$CUR_SYS_WITH_ALL_ALLOC_CHILD$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$] }",
  "qry_type": "I"
},{
  "key": "14~WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5~E_26_BIND_RECORD_FROM_QUERY~DT_FOLDER~DTT_RIL_FOLDER~DS_1444826323143~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5$DQ$,$DQ$DS_1444826323143$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT rank,         trn_id,         item_id,         item_type,         dtt_code,         category,         systems,         allocated_appuser_name,         flag,         is_approved,         id1,         fx_item_id ,ta_id FROM   (SELECT Dense_rank()                   OVER(                     ORDER BY trnal1.ta_id) rank,                    trnal1.ta_id               ta_id,                 trnal1.ta_id               fx_item_id,                 trnal1.ta_id               AS trn_id,                 item_id,                 item_type,                 $SQ$DTT_ALLOCATION$SQ$           dtt_code,                 category,                 systems,                 trnal1.allocated_appuser_name,                 CASE                   WHEN COALESCE(is_approved, $SQ$N$SQ$) = $SQ$Y$SQ$ THEN $SQ$N$SQ$                   ELSE $SQ$Y$SQ$                 END                        flag,                 CASE                   WHEN COALESCE(is_approved, $SQ$N$SQ$) = $SQ$Y$SQ$ THEN $SQ$APPROVED$SQ$                   ELSE $SQ$NOT APPROVED$SQ$                 END                        is_approved,                 1                          AS id1          FROM   (SELECT DISTINCT $SQ$USER$SQ$                  category,                                  NULL                    systems,                                  trnal.ta_id,                                  trnal.allocated_appu_id allocated_id,                                  trnal.allocated_appuser_name                  FROM   transaction_allocations TRNAL                  UNION                  SELECT $SQ$SYSTEM$SQ$                  category,                         NULL                      systems,                         trnal.ta_id,                         trnal.allocated_appsts_id allocated_id,                         trnal.allocated_appuser_name                  FROM   transaction_allocations TRNAL                  UNION                  SELECT $SQ$ROLE$SQ$                  category,                         NULL                    systems,                         trnal.ta_id,                         trnal.allocated_appr_id allocated_id,                         trnal.allocated_appuser_name                  FROM   transaction_allocations TRNAL)VW                 INNER JOIN transaction_allocations TRNAL1                         ON trnal1.ta_id = vw.ta_id                            AND ( vw.allocated_id = trnal1.allocated_appu_id                                   OR vw.allocated_id = trnal1.allocated_appsts_id                                   OR vw.allocated_id = trnal1.allocated_appr_id )          ORDER  BY 1)vw1 $WHERE$DQ$,$DQ$14$DQ$,$DQ$1$DQ$,$DQ$E_26_BIND_RECORD_FROM_QUERY$DQ$,$DQ$DT_FOLDER$DQ$,$DQ$DTT_RIL_FOLDER$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$] }",
  "qry_type": "I"
},{
  "key": "14~WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5~E_1445059598851~DT_FOLDER~DTT_RIL_FOLDER~DS_1468904628398~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5$DQ$,$DQ$DS_1468904628398$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$WITH recursive recur_select (ts_id,parent_ts_id,trn_id,dt_code,dtt_code,trna_id,status) AS  (                  SELECT DISTINCT ts_id,                                  parent_ts_id,                                  trn_id,                                  dt_code,                                  dtt_code ,                                  trna_id,                                  status,                                  process_status,                                  is_current,                                  original_file_name                  FROM            (                                                  SELECT DISTINCT ts.ts_id,                                                                  ts.parent_ts_id,                                                                  trna.trn_id,                                                                  trna.dt_code,                                                                  trna.dtt_code ,                                                                  trna.trna_id,                                                                  ts1.status,                                                                  ts1.process_status,                                                                  is_current,                                                                  original_file_name,trna.system_id                                                  FROM            trn_attachments trna                                                  INNER JOIN      transaction_set ts                                                  ON              ts.trn_id=trna.trn_id                                                  AND             ts.dt_code=trna.dt_code                                                  AND             ts.dtt_code=trna.dtt_code                                                  INNER JOIN      transaction_set ts1                                                  ON              ts1.trn_id=trna.atmt_trn_id                                                  AND             ts1.dtt_code=trna.atmt_dtt_code                                                  LEFT JOIN                                                                  (                                                                             SELECT     trnala.taa_id,                                                                                       item_id                                                                             FROM       transaction_allocation_actions trnala                                                                            INNER JOIN transaction_allocations trnal                                                                            ON         trnala.ta_id = trnal.ta_id                                                                            WHERE      item_type=$SQ$ATMT$SQ$                                                                            AND        COALESCE(taa_id,0 )<> 0 )vw                                                  ON              vw.item_id=trna.trna_id                                                  LEFT JOIN       vw_allocation_chk_list vw1                                                  ON              vw1.item_id=trna.trna_id )t1                  WHERE           is_current=$SQ$Y$SQ$  AND (  (STATUS = $SQ$DOC-APPROVED$SQ$  AND  PROCESS_STATUS = $SQ$ACTIVE$SQ$) OR (STATUS = $SQ$DOC-BLOCKED$SQ$  AND  PROCESS_STATUS = $SQ$ACTIVE$SQ$))$AND                             UNION ALL                  SELECT ts1.ts_id,                         ts1.parent_ts_id,                         ts1.trn_id,                         ts1.dt_code,                         ts1.dtt_code ,                         rs.trna_id,                         rs.status,                         ts1.process_status,                         is_current,                         original_file_name                  FROM   recur_select rs,                         transaction_set ts1                  WHERE  ts1.ts_id=rs.parent_ts_id )  SELECT   *  FROM     (                      SELECT     vw.child_id,                                 vw.parent_id,                                 CASE                                            WHEN COALESCE(vw.total_pages,0)=0 THEN vw.seq_name                                                                  ||$SQ$ ($SQ$                                                                  ||rs.status                                                                  ||$SQ$) $SQ$                                            ELSE vw.seq_name                                                                  ||$SQ$ ($SQ$                                                                  ||rs.status                                                                  ||$SQ$) $SQ$                                                                  ||$SQ$ - ($SQ$                                                                  ||vw.total_pages                                                                  ||$SQ$)$SQ$                                 END node_text,                                 CASE                                            WHEN rs.status=$SQ$DOC-APPROVED$SQ$ THEN $SQ$Y$SQ$                                            WHEN rs.status=$SQ$DOC-ADDED$SQ$ THEN $SQ$N$SQ$                                            WHEN rs.status=$SQ$DOC-BLOCKED$SQ$ THEN $SQ$N$SQ$                                            ELSE $SQ$$SQ$                                 END flag1,                                 CASE                                            WHEN rs.status=$SQ$DOC-APPROVED$SQ$ THEN $SQ$N$SQ$                                            WHEN rs.status=$SQ$DOC-ADDED$SQ$ THEN $SQ$N$SQ$                                            WHEN rs.status=$SQ$DOC-BLOCKED$SQ$ THEN $SQ$Y$SQ$                                            ELSE $SQ$$SQ$                                 END flag2,                                 vw.trna_id,                                 vw.trn_id,                                 vw.dt_code,                                 vw.dtt_code,                                 vw.node_type,                                 vw.node_category,                                 vw.atmt_dtt_code,                                 vw.atmt_trn_id,                                 vw.atmt_ts_id,                                 vw.icon_name,                                 vw.ts_id,                                 vw.trnf_id,                                 vw.at_code,                                 vw.seq_no,                                 vw.trna_id fx_item_id                      FROM       recur_select rs                      INNER JOIN vw_ril_tran_reader_listing vw                      ON         vw.trna_id=rs.trna_id                      AND        vw.dtt_code=rs.dtt_code                      AND        vw.node_type=$SQ$ATMT$SQ$                      UNION                      SELECT     vw.child_id,                                 vw.parent_id,                                 CASE                                            WHEN COALESCE(vw1.no_of_docs,0)=0 THEN vw.seq_name                                            ELSE vw.seq_name                                                                  ||$SQ$ - ($SQ$                                                                  ||vw1.no_of_docs                                                                  ||$SQ$)$SQ$                                 END node_text,                                 $SQ$Y$SQ$ flag1,                                 $SQ$Y$SQ$ flag2,                                 vw.trna_id,                                 vw.trn_id,                                 vw.dt_code,                                 vw.dtt_code,                                 vw.node_type,                                 vw.node_category,                                 vw.atmt_dtt_code,                                 vw.atmt_trn_id,                                 vw.atmt_ts_id,                                 vw.icon_name,                                 vw.ts_id,                                 vw.trnf_id,                                 vw.at_code,                                 vw.seq_no,                                 vw.trn_id fx_item_id                      FROM       recur_select rs                      INNER JOIN vw_ril_tran_reader_listing vw                      ON         vw.trn_id=rs.trn_id                      AND        vw.dtt_code=rs.dtt_code                      AND        vw.node_type=$SQ$TRAN$SQ$                      INNER JOIN                                 (                                          SELECT   count(rs.trna_id)no_of_docs,                                                   rs.trn_id                                          FROM     recur_select rs                                          WHERE    rs.dt_code=$SQ$DT_FOLDER$SQ$                                          AND      rs.dtt_code=$SQ$DTT_RIL_FOLDER$SQ$                                          GROUP BY rs.trn_id )vw1                      ON         vw1.trn_id=rs.trn_id )vw2  ORDER BY seq_no$DQ$,$DQ$14$DQ$,$DQ$1$DQ$,$DQ$E_1445059598851$DQ$,$DQ$DT_FOLDER$DQ$,$DQ$DTT_RIL_FOLDER$DQ$,$DQ$CUR_SYS_WITH_ALL_ALLOC_CHILD$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$] }",
  "qry_type": "I"
},{
  "key": "14~WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5~E_18_CHANGE_TRAN_USING_WF~WF_UPDATE~DT_FOLDER~DTT_RIL_DEFAULT_ATMT_SEARCH~DS_1476438483896~0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE, MAIN_QRY_TEXT,MAIN_QRY_TYPE, TRN_QRY_TEXT, APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5$DQ$,$DQ$DS_1476438483896$DQ$,$DQ$A$DQ$,$DQ$ UPDATE TRANSACTION_SET  SET  STATUS = $SQ$DOC-BLOCKED$SQ$,   STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$  , PROCESS_STATUS  = $SQ$ACTIVE$SQ$ , PROCESS_STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,PROCESS_STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$   ,PRCT_ID=$SQ$$PRCT_ID$SQ$,MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  WHERE  DTT_CODE = $SQ$DTT_RIL_DEFAULT_ATMT_SEARCH$SQ$ AND DT_CODE= $SQ$DT_FOLDER$SQ$ AND TS_ID IN ( SELECT TS_ID FROM TMP_FINAL_ITEMS  TFI where TFI.DTT_CODE = $SQ$DTT_RIL_DEFAULT_ATMT_SEARCH$SQ$ and PRCT_ID=$SQ$$PRCT_ID$SQ$ )$DQ$,$DQ$U$DQ$,$DQ$ UPDATE RIL_TRN_ATMT_DEFAULT_SEARCH  SET   PRCT_ID=$SQ$$PRCT_ID$SQ$, MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  ,STATUS = $SQ$DOC-BLOCKED$SQ$,PROCESS_STATUS  = $SQ$ACTIVE$SQ$ WHERE DTT_DAS_ID  IN ( SELECT TRN_ID FROM TMP_FINAL_ITEMS TFI where TFI.DTT_CODE = $SQ$DTT_RIL_DEFAULT_ATMT_SEARCH$SQ$and PRCT_ID=$SQ$$PRCT_ID$SQ$)$DQ$,$DQ$14$DQ$,$DQ$0$DQ$,$DQ$E_18_CHANGE_TRAN_USING_WF$DQ$,$DQ$DT_FOLDER$DQ$,$DQ$DTT_RIL_DEFAULT_ATMT_SEARCH$DQ$,$DQ$WF_UPDATE$DQ$] }",
  "qry_type": "I"
},{
  "key": "14~WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5~E_14_CHANGE_TRAN_USING_WF~WF_UPDATE~DT_FOLDER~DTT_RIL_ACCTG_ATMT_SEARCH~DS_1476438358378~0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE, MAIN_QRY_TEXT,MAIN_QRY_TYPE, TRN_QRY_TEXT, APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5$DQ$,$DQ$DS_1476438358378$DQ$,$DQ$A$DQ$,$DQ$ UPDATE TRANSACTION_SET  SET  STATUS = $SQ$DOC-APPROVED$SQ$,   STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$  , PROCESS_STATUS  = $SQ$ACTIVE$SQ$ , PROCESS_STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,PROCESS_STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$   ,PRCT_ID=$SQ$$PRCT_ID$SQ$,MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  WHERE  DTT_CODE = $SQ$DTT_RIL_ACCTG_ATMT_SEARCH$SQ$ AND DT_CODE= $SQ$DT_FOLDER$SQ$ AND TS_ID IN ( SELECT TS_ID FROM TMP_FINAL_ITEMS  TFI where TFI.DTT_CODE = $SQ$DTT_RIL_ACCTG_ATMT_SEARCH$SQ$ and PRCT_ID=$SQ$$PRCT_ID$SQ$ )$DQ$,$DQ$U$DQ$,$DQ$ UPDATE RIL_TRN_ATMT_ACCTG_SEARCH  SET   PRCT_ID=$SQ$$PRCT_ID$SQ$, MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  ,STATUS = $SQ$DOC-APPROVED$SQ$,PROCESS_STATUS  = $SQ$ACTIVE$SQ$ WHERE TRNAAS_ID  IN ( SELECT TRN_ID FROM TMP_FINAL_ITEMS TFI where TFI.DTT_CODE = $SQ$DTT_RIL_ACCTG_ATMT_SEARCH$SQ$and PRCT_ID=$SQ$$PRCT_ID$SQ$)$DQ$,$DQ$14$DQ$,$DQ$0$DQ$,$DQ$E_14_CHANGE_TRAN_USING_WF$DQ$,$DQ$DT_FOLDER$DQ$,$DQ$DTT_RIL_ACCTG_ATMT_SEARCH$DQ$,$DQ$WF_UPDATE$DQ$] }",
  "qry_type": "I"
},{
  "key": "14~WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5~E_18_CHANGE_TRAN_USING_WF~WF_UPDATE~DT_FOLDER~DTT_RIL_ACCTG_ATMT_SEARCH~DS_1476438469350~0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE, MAIN_QRY_TEXT,MAIN_QRY_TYPE, TRN_QRY_TEXT, APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5$DQ$,$DQ$DS_1476438469350$DQ$,$DQ$A$DQ$,$DQ$ UPDATE TRANSACTION_SET  SET  STATUS = $SQ$DOC-BLOCKED$SQ$,   STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$  , PROCESS_STATUS  = $SQ$ACTIVE$SQ$ , PROCESS_STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,PROCESS_STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$   ,PRCT_ID=$SQ$$PRCT_ID$SQ$,MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  WHERE  DTT_CODE = $SQ$DTT_RIL_ACCTG_ATMT_SEARCH$SQ$ AND DT_CODE= $SQ$DT_FOLDER$SQ$ AND TS_ID IN ( SELECT TS_ID FROM TMP_FINAL_ITEMS  TFI where TFI.DTT_CODE = $SQ$DTT_RIL_ACCTG_ATMT_SEARCH$SQ$ and PRCT_ID=$SQ$$PRCT_ID$SQ$ )$DQ$,$DQ$U$DQ$,$DQ$ UPDATE RIL_TRN_ATMT_ACCTG_SEARCH  SET   PRCT_ID=$SQ$$PRCT_ID$SQ$, MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  ,STATUS = $SQ$DOC-BLOCKED$SQ$,PROCESS_STATUS  = $SQ$ACTIVE$SQ$ WHERE TRNAAS_ID  IN ( SELECT TRN_ID FROM TMP_FINAL_ITEMS TFI where TFI.DTT_CODE = $SQ$DTT_RIL_ACCTG_ATMT_SEARCH$SQ$and PRCT_ID=$SQ$$PRCT_ID$SQ$)$DQ$,$DQ$14$DQ$,$DQ$0$DQ$,$DQ$E_18_CHANGE_TRAN_USING_WF$DQ$,$DQ$DT_FOLDER$DQ$,$DQ$DTT_RIL_ACCTG_ATMT_SEARCH$DQ$,$DQ$WF_UPDATE$DQ$] }",
  "qry_type": "I"
},{
  "key": "14~WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5~E_14_CHANGE_TRAN_USING_WF~WF_UPDATE~DT_FOLDER~DTT_RIL_DEFAULT_ATMT_SEARCH~DS_1476438370242~0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE, MAIN_QRY_TEXT,MAIN_QRY_TYPE, TRN_QRY_TEXT, APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFTPA_1304120161014195845_WFT_RIL_P_Code_16_5$DQ$,$DQ$DS_1476438370242$DQ$,$DQ$A$DQ$,$DQ$ UPDATE TRANSACTION_SET  SET  STATUS = $SQ$DOC-APPROVED$SQ$,   STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$  , PROCESS_STATUS  = $SQ$ACTIVE$SQ$ , PROCESS_STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,PROCESS_STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$   ,PRCT_ID=$SQ$$PRCT_ID$SQ$,MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  WHERE  DTT_CODE = $SQ$DTT_RIL_DEFAULT_ATMT_SEARCH$SQ$ AND DT_CODE= $SQ$DT_FOLDER$SQ$ AND TS_ID IN ( SELECT TS_ID FROM TMP_FINAL_ITEMS  TFI where TFI.DTT_CODE = $SQ$DTT_RIL_DEFAULT_ATMT_SEARCH$SQ$ and PRCT_ID=$SQ$$PRCT_ID$SQ$ )$DQ$,$DQ$U$DQ$,$DQ$ UPDATE RIL_TRN_ATMT_DEFAULT_SEARCH  SET   PRCT_ID=$SQ$$PRCT_ID$SQ$, MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  ,STATUS = $SQ$DOC-APPROVED$SQ$,PROCESS_STATUS  = $SQ$ACTIVE$SQ$ WHERE DTT_DAS_ID  IN ( SELECT TRN_ID FROM TMP_FINAL_ITEMS TFI where TFI.DTT_CODE = $SQ$DTT_RIL_DEFAULT_ATMT_SEARCH$SQ$and PRCT_ID=$SQ$$PRCT_ID$SQ$)$DQ$,$DQ$14$DQ$,$DQ$0$DQ$,$DQ$E_14_CHANGE_TRAN_USING_WF$DQ$,$DQ$DT_FOLDER$DQ$,$DQ$DTT_RIL_DEFAULT_ATMT_SEARCH$DQ$,$DQ$WF_UPDATE$DQ$] }",
  "qry_type": "I"
}]